stepback: true
command_type: system

functions:
    "fetch source":
    - command: git.get_project
      params:
        directory: "src"

    "fetch nodejs":
    - command: shell.exec
      type: system
      params:
        script: |
            export NVM_DIR="$HOME/src/.nvm"
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install --lts=${NODE_LTS_NAME}

    "run tests":
    - command: shell.exec
      type: test
      params:
        working_dir: "src"
        script: |
          export PATH="/opt/mongodbtoolchain/v2/bin:$PATH"
          export NVM_DIR="$HOME/src/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

          npm install
          MONGODB_VERSION=${VERSION} MONGODB_ENVIRONMENT=${TOPOLOGY} npm test -- --evergreen

pre:
    - func: "fetch source"
    - func: "fetch nodejs"

tasks:
    - name: "test-2.6-standalone"
      tags: ["2.6", "standalone"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "2.6"
            TOPOLOGY: "single"

    - name: "test-2.6-replica_set"
      tags: ["2.6", "replica_set"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "2.6"
            TOPOLOGY: "replicaset"

    - name: "test-2.6-sharded_cluster"
      tags: ["2.6", "sharded_cluster"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "2.6"
            TOPOLOGY: "sharded"

    - name: "test-3.0-standalone"
      tags: ["3.0", "standalone"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.0"
            TOPOLOGY: "single"

    - name: "test-3.0-replica_set"
      tags: ["3.0", "replica_set"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.0"
            TOPOLOGY: "replicaset"

    - name: "test-3.0-sharded_cluster"
      tags: ["3.0", "sharded_cluster"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.0"
            TOPOLOGY: "sharded"

    - name: "test-3.2-standalone"
      tags: ["3.2", "standalone"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.2"
            TOPOLOGY: "single"

    - name: "test-3.2-replica_set"
      tags: ["3.2", "replica_set"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.2"
            TOPOLOGY: "replicaset"

    - name: "test-3.2-sharded_cluster"
      tags: ["3.2", "sharded_cluster"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.2"
            TOPOLOGY: "sharded"

    - name: "test-3.4-standalone"
      tags: ["3.4", "standalone"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.4"
            TOPOLOGY: "single"

    - name: "test-3.4-replica_set"
      tags: ["3.4", "replica_set"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.4"
            TOPOLOGY: "replicaset"

    - name: "test-3.4-sharded_cluster"
      tags: ["3.4", "sharded_cluster"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.4"
            TOPOLOGY: "sharded"

    - name: "test-3.6-standalone"
      tags: ["3.6", "standalone"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.6"
            TOPOLOGY: "single"

    - name: "test-3.6-replica_set"
      tags: ["3.6", "replica_set"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.6"
            TOPOLOGY: "replicaset"

    - name: "test-3.6-sharded_cluster"
      tags: ["3.6", "sharded_cluster"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "3.6"
            TOPOLOGY: "sharded"

    - name: "test-latest-standalone"
      tags: ["latest", "standalone"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "latest"
            TOPOLOGY: "single"

    - name: "test-latest-replica_set"
      tags: ["latest", "replica_set"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "latest"
            TOPOLOGY: "replicaset"

    - name: "test-latest-sharded_cluster"
      tags: ["latest", "sharded_cluster"]
      commands:
        - func: "run tests"
          vars:
            VERSION: "latest"
            TOPOLOGY: "sharded"

axes:
  - id: versions
    display_name: MongoDB Version
    values:
      - id: "latest"
        display_name: "latest"
        variables:
           VERSION: "latest"
      - id: "3.6"
        display_name: "3.6"
        variables:
           VERSION: "3.6"
      - id: "3.4"
        display_name: "3.4"
        variables:
           VERSION: "3.4"
      - id: "3.2"
        display_name: "3.2"
        variables:
           VERSION: "3.2"
      - id: "3.0"
        display_name: "3.0"
        variables:
           VERSION: "3.0"
      - id: "2.6"
        display_name: "2.6"
        variables:
           VERSION: "2.6"
  - id: os
    display_name: OS
    values:
      - id: os_rhel62
        display_name: RHEL 6.2
        run_on:
          - rhel62-test
          - rhel62-build
          - rhel62-large
          - rhel62-small
      - id: os_suse12_zseries
        display_name: SUSE 12 Z Series
        run_on:
          - suse12-zseries-build
          - suse12-zseries-test
      - id: os_ubuntu1604_arm64
        display_name: Ubuntu 16.04 ARM64
        run_on:
          - ubuntu1604-arm64-large
          - ubuntu1604-arm64-small
      - id: os_ubuntu1604_power8
        display_name: Ubuntu 16.04 Power8
        run_on:
          - ubuntu1604-power8-build
          - ubuntu1604-power8-test
      - id: os_windows64
        display_name: Win64
        run_on:
          - windows-64-vs2013-compile
          - windows-64-vs2013-test
          - windows-64-vs2015-compile
          - windows-64-vs2015-test
          - windows-64-vs2015-small
          - windows-64-vs2015-large
  - id: node-version
    display_name: "Node.js"
    values:
      - id: "Argon"
        display_name: "Node.js Argon LTS"
        variables:
           NODE_LTS_NAME: "argon"
      - id: "Boron"
        display_name: "Node.js Boron LTS"
        variables:
           NODE_LTS_NAME: "boron"

buildvariants:
- matrix_name: "tests-all"
  matrix_spec: { os: "*", node-version: '*' }
  display_name: "${os} ${node-version}"
  tasks:
     - ".latest"
     - ".3.6"
     - ".3.4"
     - ".3.2"
     - ".3.0"
     - ".2.6"
